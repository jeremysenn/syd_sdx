= render partial: "shared/navbars/new_and_edit_customer_navbar", locals: {title: "#{@customer['FirstName']} #{@customer['LastName']}"}
- @title="Edit customer"

.container
  %br
  %br
  -#
    #divLoadInfo
      %i.fa.fa-spinner.fa-lg.fa-spin
      Drivers License Scanner loading
    #divScanbutton{style: 'display: none;'}
      %input#uploadImage.btn-secondary{:accept => "image/bmp,image/jpeg,image/png,image/gif", :title => "<i class='fa fa-barcode'></i> Scan Drivers License Barcode", :type => "file"}/
  
  %ul{class: 'list-inline'}
    - current_user.license_reader_devices.each do |license_reader_device|
      %li
        %a{href: '#', id: 'drivers_license_scan', 'data-device-id' => license_reader_device.id, onclick: "$(this).find('.data_scan_spinner:first').show();", class: 'drivers_license_scan btn btn-lg btn-default'}
          %i.fa.fa-list-alt
          = "#{license_reader_device.DeviceName}"
          = image_tag("ajax-loader.gif", :id => "data_scan_spinner", :class => "data_scan_spinner", :alt => "Loading ...", style: "display:none;")
    - current_user.license_imager_devices.each do |license_imager_device|
      %li
        %a{href: '#', class: 'save_license_scan_to_jpegger btn btn-lg btn-default', 'data-device-id' => license_imager_device.id, 'data-customer-id' => @customer['Id'], 'data-yard-id' => current_yard_id, 'data-camera-name' => license_imager_device.DeviceName}
          %i.fa.fa-user
          %i.fa.fa-spinner.fa-lg.fa-spin{style: 'display:none;'}
          = "#{license_imager_device.DeviceName}"
          =# image_tag("ajax-loader.gif", :id => "image_scan_spinner", :class => "save_to_jpegger_spinner", :alt => "Loading ...", style: "display:none;")

  - if current_user.admin?
    .alert.alert-warning
      %p.lead
        %i.fa.fa-compress
        = "Customer Portal"
      - @customer_users.each do |customer_user|
        %p= link_to customer_user.name, edit_user_path(@customer_user), class: 'btn btn-default'
      - if current_user.company.include_external_users?
        %p= link_to "Create new customer login", "#new_user_form", "data-toggle" => "modal", class: 'btn btn-primary'
        = render partial: 'users/new_modal'
      - else
        %p= link_to "Create new customer login", "#", "data-toggle" => "modal", class: 'btn btn-primary disabled'
    -#
      - if @customer_user.blank?
        - if current_user.company.include_external_users?
          .alert.alert-warning
            = link_to "Create customer login", "#new_user_form", "data-toggle" => "modal", class: 'btn btn-default'
          = render partial: 'users/new_modal'
        - else
          .alert.alert-warning
            = link_to "Create customer login", "#", "data-toggle" => "modal", class: 'btn btn-default disabled'
        
  .well.col-sm-12.col-md-12{id: 'customer_info'}
    = form_tag customer_path(@customer["Id"]), method: 'put', :class => "form-horizontal", id: 'customer_form' do
      = hidden_field_tag "customer[id]", @customer['Id']
      = hidden_field_tag "customer[tax_collection]", @customer['TaxCollection']
      .row.form-group
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "First Name", nil, :class => 'control-label'
          = text_field_tag "customer[first_name]", @customer['FirstName'], :placeholder => "First Name", class: "form-control input-lg"
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "Last Name", nil, :class => 'control-label'
          = text_field_tag "customer[last_name]", @customer['LastName'], :placeholder => "Last Name", class: "form-control input-lg"
      .row.form-group
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "Company", nil, :class => 'control-label'
          = text_field_tag "customer[company]", @customer['Company'], :placeholder => "Company", class: "form-control input-lg"
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "Phone", nil, :class => 'control-label'
          = text_field_tag "customer[phone]", @customer['Phone'], :placeholder => "Phone", class: "form-control input-lg"
      %hr
      .row.form-group
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "Address 1", nil, :class => 'control-label'
          = text_field_tag "customer[address_1]", @customer['Address1'], :placeholder => "Address 1", class: "form-control input-lg"
        %div{:class => "col-sm-6 col-md-6"}
          = label_tag "Address 2", nil, :class => 'control-label'
          = text_field_tag "customer[address_2]", @customer['Address2'], :placeholder => "Address 2", class: "form-control input-lg"
      .row.form-group
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "City", nil, :class => 'control-label'
          = text_field_tag "customer[city]", @customer['City'], :placeholder => "City", class: "form-control input-lg"
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "State", nil, :class => 'control-label'
          =# text_field_tag "customer[state]", @customer['State'], :placeholder => "State", class: "form-control input-lg"
          = select_tag "customer[state]", options_for_select(us_states_and_ca_provinces, @customer['State']), :class => "form-control input-lg"
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "Zip", nil, :class => 'control-label'
          = text_field_tag "customer[zip]", @customer['Zip'], :placeholder => "Zip", class: "form-control input-lg"
      %hr
      .row.form-group
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "ID Number", nil, :class => 'control-label'
          = text_field_tag "customer[id_number]", @customer['IdNumber'], :placeholder => "ID Number", class: "form-control input-lg"
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "ID State", nil, :class => 'control-label'
          = text_field_tag "customer[id_state]", @customer['IdState'], :placeholder => "ID State", class: "form-control input-lg"
        %div{:class => "col-sm-4 col-md-4"}
          = label_tag "ID Expiration", nil, :class => 'control-label'
          =# date_field_tag "customer[id_expiration]", @customer['IdExpires'], :placeholder => "ID Expiration", class: "form-control input-lg"
          - unless @customer['IdExpires'] == {"i:nil"=>"true"} or @customer['IdExpires'].blank?
            = text_field_tag "customer[id_expiration]", @customer['IdExpires'].to_date, :placeholder => "ID Expiration", class: "form-control input-lg", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true
          - else
            = text_field_tag "customer[id_expiration]", '', :placeholder => "ID Expiration", class: "form-control input-lg", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true
      
      .row.form-group
        %div{:class => "col-sm-12 col-md-12"}
          = button_tag(:type => 'submit', :class => 'btn btn-primary btn-lg btn-block', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Save"}) do
            Save

= render partial: "shared/edit_customer_footer_navbar", locals: {title: "Customer"}

-# <script src="https://demo.dynamsoft.com/dbr_wasm/js/dbr-6.5.0.1.min.js"></script>
-#
  <script src="#{asset_path('dbr-6.5.0.1.min.js')}"></script>
  :javascript
    //dynamsoft.dbrEnv.resourcesPath = 'https://demo.dynamsoft.com/dbr_wasm/js';
    //dynamsoft.dbrEnv.resourcesPath = "http://localhost:8081/assets";
    //dynamsoft.dbrEnv.resourcesPath = "#{asset_path('assets')}";
    dynamsoft.dbrEnv.resourcesPath = "#{asset_path('/')}";

    //dynamsoft.dbrEnv.bUseWorker = true; //uncomment it to use worker

    dynamsoft.dbrEnv.onAutoLoadWasmSuccess = function(){
        //document.getElementById('divLoadInfo').innerHTML="load dbr wasm success.";
        document.getElementById('divLoadInfo').innerHTML="";
        document.getElementById('divScanbutton').style.display = 'block';
    };
    dynamsoft.dbrEnv.onAutoLoadWasmError = function(status){
        document.getElementById('divLoadInfo').innerHTML="load wasm failed: "+status;
    };

    //https://www.dynamsoft.com/CustomerPortal/Portal/TrialLicense.aspx
    dynamsoft.dbrEnv.licenseKey = "t0068MgAAAF5kghIuCCwXvOgYPm3ff4uhtj9qAcpXBD2idkDkPX3cORBiyXkdD37oM3StFxaPwPyTNapr1u4SZKOaxSVxpnc=";

    document.getElementById('uploadImage').addEventListener('change', function(){
        var files = this.files;
        var reader = new dynamsoft.BarcodeReader();
        var timestart = (new Date()).getTime();
        reader.decodeFileInMemory(files[0]).then(function(results){
            if(self.kConsoleLog)self.kConsoleLog('time cost: ' + ((new Date()).getTime() - timestart) + 'ms');
            var txts = [];
            for(var i=0;i<results.length;++i){
                txts.push(results[i].BarcodeText);
            }
            reader.deleteInstance();
            alert(txts.join("\n"));
        }).catch(ex => {
            reader.deleteInstance();
            alert("Error: "+(ex.message || ex));
            console.log(ex);
        });
        this.value = '';
    });