.row
  -#
    .col-xs-12.col-sm-6
      %p.lead 
        Tickets Customer Summary Report
        - unless @tickets.blank? 
          %a{href: reports_path(format: "csv", :customer_id => params[:customer_id], 'report[type]' => @type, 'report[status]' => @status, 'report[start_date]' => @start_date, 'report[end_date]' => @end_date), class: 'btn btn-default'}
            %i.fa.fa-download
            CSV
        %br
        = "#{pluralize(@tickets.count, "ticket")} found"
  -#
    .col-xs-12.col-sm-8
      - unless @tickets.blank?
        .text-center
          .col-xs-6
            = "Customer Tickets"
            = content_tag :div, "", id: "ticket-customer-number-summary-donut", data: {tickets: ticket_customer_number_donut_data(@tickets)}
          .col-xs-6
            = "Customer by Amount ($)"
            = content_tag :div, "", id: "ticket-customer-amount-summary-donut", data: {tickets: ticket_customer_amount_donut_data(@tickets)}

    .col-xs-12.col-sm-4
      %p
        Cash
        = number_to_currency(@cash_total)
        %br
        Check
        = number_to_currency(@check_total)
        %br
        EZcash
        = number_to_currency(@ezcash_total)
        %br
        %strong Total
        = number_to_currency(@line_items_total)

-# @tickets.group_by{ |t| t['Company']}.each_with_index do |(ticket_group, tickets), index|
- unless @tickets.blank?
  - @tickets.group_by{ |t| "#{t['FirstName']} #{t['LastName']}"}.each_with_index do |(ticket_group, tickets), index|
    .row
      .table-responsive{style: "border: none;"}
        %table.table.table-hover{"data-provides" => "rowlink"}
          %caption
            %h4
              = ticket_group
              = "No name" if ticket_group.blank?
          -#
            %div.panel.panel-default
              %div.panel-heading
                %h3.panel-title
                  %a.group{"aria-controls" => "collapse#{index}", "aria-expanded" => "true", "data-toggle" => "collapse", :href => "#collapse#{index}", :role => "button"}
                    = ticket_group
                    = "No name" if ticket_group.blank?
                    #details.text-muted.pull-right
                      = number_to_currency(tickets.map { |t| Ticket.line_items_total(t['TicketItemCollection']['ApiTicketItem']).to_d }.sum)
          %thead
            %tr
              %th= tickets_sortable 'DateCreated', 'Date'
              %th= tickets_sortable 'TicketNumber', 'Ticket'
              - unless @status == '1' # Don't need to show for closed tickets
                %th
                  Method
              %th
                Amount
              
          %tbody
            - tickets.each do |ticket|
              %tr
                %td= ticket["DateClosed"].to_date.strftime("%m/%d/%y")
                %td
                  = link_to ticket["TicketNumber"], ticket_path(ticket['Id'], status: ticket['Status'], yard_id: ticket["YardId"])
                
                - unless @status == '1' # Don't need to show for closed tickets
                  %td
                    - unless ticket['Status'] == '1'  # Don't show for closed tickets
                      =# "#{payment_method_string(AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'])}"
                      - accounts_payable_items = AccountsPayable.all(current_user.token, current_yard_id, ticket['Id'])
                      -# payment_status = AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'] rescue '4'
                      - payment_status = accounts_payable_items.find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'] rescue '4'
                      = payment_method_string(payment_status)
                      - apcashiers = Apcashier.find_all_by_id(current_user.token, current_yard_id, accounts_payable_items.first['CashierId']) if ticket['Status'] == '3'
                      - apcashier = apcashiers.first unless apcashiers.blank?
                      - if not apcashier.blank? and apcashier['PaymentMethod'] == '1'
                        = "##{apcashier['CheckNumber']}"
                    - else
                      N/A
                %td
                  = number_to_currency(Ticket.line_items_total(ticket['TicketItemCollection']['ApiTicketItem']))
                  =# "(#{payment_method_string(AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).last['PaymentMethod'])})"
            -#
            %tr
              %td
              %td
              - unless @status == '1' # Don't need to show for closed tickets
                %td
              %td
                %strong= number_to_currency(tickets.map { |t| Ticket.line_items_total(t['TicketItemCollection']['ApiTicketItem']).to_d }.sum)
- else
  %br
  .row
    .col-xs-12
      %p.text-center.lead None found

.pull-right
  %p.lead
    Cash
    = number_to_currency(@cash_total)
    %br
    Check
    = number_to_currency(@check_total)
    %br
    EZcash
    = number_to_currency(@ezcash_total)
    %br
    %strong Total
    = number_to_currency(@line_items_total)