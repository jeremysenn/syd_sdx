.row
  .col-xs-12.col-sm-6
    %p.lead 
      Tickets Customer Summary Report
      - unless @tickets.blank? 
        %a{href: reports_path(format: "csv", :customer_id => params[:customer_id], 'report[type]' => @type, 'report[status]' => @status, 'report[start_date]' => @start_date, 'report[end_date]' => @end_date), class: 'btn btn-default'}
          %i.fa.fa-download
          CSV
      %br
      = "#{pluralize(@tickets.count, "ticket")} found"
  .col-xs-12.col-sm-6
    .pull-right
      %p.lead
        Cash
        = number_to_currency(@cash_total)
        %br
        Check
        = number_to_currency(@check_total)
        %br
        EZcash
        = number_to_currency(@ezcash_total)
        %br
        %strong Total
        = number_to_currency(@line_items_total)

- unless @tickets.blank?
  .row
    .well.col-xs-12.col-sm-6
      %p.text-center= "Customer Tickets"
      = content_tag :div, "", id: "ticket-customer-number-summary-donut", data: {tickets: ticket_customer_number_donut_data(@tickets)}
    .well.col-xs-12.col-sm-6
      %p.text-center= "Customer by Amount ($)"
      = content_tag :div, "", id: "ticket-customer-amount-summary-donut", data: {tickets: ticket_customer_amount_donut_data(@tickets)}


-# @tickets.group_by{ |t| t['Company']}.each_with_index do |(ticket_group, tickets), index|
- @tickets.group_by{ |t| "#{t['FirstName']} #{t['LastName']}"}.each_with_index do |(ticket_group, tickets), index|
  .row
    %div.panel.panel-default
      %div.panel-heading
        %h3.panel-title
          %a.group{"aria-controls" => "collapse#{index}", "aria-expanded" => "true", "data-toggle" => "collapse", :href => "#collapse#{index}", :role => "button"}
            = ticket_group
            = "No name" if ticket_group.blank?
            #details.text-muted.pull-right
              = number_to_currency(tickets.map { |t| Ticket.line_items_total(t['TicketItemCollection']['ApiTicketItem']).to_d }.sum)
      %div.panel-collapse.collapse.in{:id => "collapse#{index}", "aria-labelledby" => "headingOne", :role => "tabpanel"}
        %table.table.table-striped.table-responsive.table-hover{"data-provides" => "rowlink"}
          %thead
            %tr
              %th
                Date
              %th
                Ticket
              %th
                Amount
              - unless @status == '1' # Don't need to show for closed tickets
                %th
                  Method
              -#
                %td
                  %strong Ticket record
          %tbody
            - tickets.each do |ticket|
              %tr
                %td= ticket["DateClosed"].to_date.strftime("%m/%d/%y")
                %td
                  = link_to ticket["TicketNumber"], ticket_path(ticket['Id'], status: ticket['Status'], yard_id: ticket["YardId"])
                  =# ticket["TicketNumber"]
                %td
                  = number_to_currency(Ticket.line_items_total(ticket['TicketItemCollection']['ApiTicketItem']))
                  =# "(#{payment_method_string(AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).last['PaymentMethod'])})"
                %td
                  - unless ticket['Status'] == '1'  # Don't show for closed tickets
                    =# "#{payment_method_string(AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'])}"
                    - accounts_payable_items = AccountsPayable.all(current_user.token, current_yard_id, ticket['Id'])
                    -# payment_status = AccountsPayable.all(current_user.token, current_yard_id, ticket['Id']).find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'] rescue '4'
                    - payment_status = accounts_payable_items.find{|accounts_payable| accounts_payable['PaymentStatus'] == '1'}['PaymentMethod'] rescue '4'
                    = payment_method_string(payment_status)
                    - apcashier = Apcashier.find_by_id(current_user.token, current_yard_id, accounts_payable_items.first['CashierId'])
                    - if apcashier and apcashier['PaymentMethod'] == '1'
                      = "##{apcashier['CheckNumber']}"
                  - else
                    N/A
                -# %td= ticket
            -#
              %tr
                %td
                %td
                %td
                  %strong= number_to_currency(tickets.map { |t| Ticket.line_items_total(t['TicketItemCollection']['ApiTicketItem']).to_d }.sum)
%hr
.pull-right
  %p.lead
    Cash
    = number_to_currency(@cash_total)
    %br
    Check
    = number_to_currency(@check_total)
    %br
    EZcash
    = number_to_currency(@ezcash_total)
    %br
    %strong Total
    = number_to_currency(@line_items_total)