= render partial: "shared/navbars/service_requests_navbar", locals: {title: "Service Requests"}
- @title="Service Requests"
  
.container
  %br
  %br
  = form_tag service_requests_path, :method => 'get', :class => "form-inline" do
    .form-group
      = label_tag "Status", nil, :class => 'control-label'
      = select_tag 'service_request[status]', options_for_select([['All'], ['Planned', '0'], ['Started', '1'], ['Completed', '2'], ['Canceled', '3'], ['Rescheduled', '4'], ['Deployed', '5'], ['Merged', '6']], @status), class: "form-control input-lg"
    .form-group
      = label_tag "Driver", nil, :class => 'control-label'
      = select_tag 'service_request[driver_id]', options_for_select(@drivers.collect {|driver| [ "#{driver['FirstName']} #{driver['LastName']}", driver['Id'] ] }.insert(0,'All'), @driver_id), class: "form-control input-lg"
    .form-group
      = label_tag "Start", nil, :class => 'control-label'
      = text_field_tag 'service_request[start_date]', nil, :placeholder => "Start Date", value: @start_date, class: "form-control input-lg", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true, readonly: true
    .form-group
      = button_tag(:type => 'submit', :class => 'btn btn-primary btn-lg', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Search"}) do
        %i.fa.fa-search
        Search
  %hr
  
  - unless @service_requests.blank?
    .table-responsive
      %table.table.table-striped
        %thead
          %tr
            %th 
              %strong #
            %th 
              %strong Status
            %th 
              %strong Date
            %th 
              %strong Driver
            %th 
              %strong Tasks
            %th 
              %strong Workorders
            %th
        %tbody
          - @service_requests.sort_by{|service_request| service_request['BeginDate']}.each do |service_request|
            - driver = @drivers.find {|driver| driver['Id'] == service_request['DriverId']}
            - tasks = Trip.service_request_tasks(service_request)
            - workorders = Trip.service_request_workorders(service_request)
            %tr
              %td= "#{service_request['TripNumber']}"
              %td= "#{service_request_status_string(service_request['TripStatus'])}"
              %td= "#{service_request['BeginDate'].to_datetime.strftime('%-m/%-d/%y')}"
              %td= "#{driver.blank? ? 'Unassigned' : driver['FirstName'] + ' ' + driver['LastName']}"
              %td
                %a{href: "#service_request_#{service_request['Id']}_tasks_modal", "data-target" => "#service_request_#{service_request['Id']}_tasks_modal", "data-toggle" => "modal", id: "#service_request_#{service_request['Id']}_tasks_link"}
                  %span.badge{style: 'background-color: #5BC0DE;'}= tasks.count
              .modal.fade{id: "service_request_#{service_request['Id']}_tasks_modal", "aria-labelledby" => "myModalLabel", :role => "dialog"}
                .modal-dialog.modal-sm{:role => "document"}
                  .modal-content
                    .modal-header
                      %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                        %span{"aria-hidden" => "true"} ×
                      %strong= "Service Request #{service_request['TripNumber']} Tasks"
                    .modal-body
                      - unless tasks.blank?
                        - tasks.sort_by {|task| task['Sequence']}.each do |task|
                          %li{class: "list-group-item #{task_status_color(task['TaskStatus'])}"}
                            = task['Sequence']
                            = task_type_string(task['TaskType'])
                            %small
                              .text-muted 
                                - unless task['ToLocation'].blank? or task['ToLocation'].is_a? Hash
                                  = task['ToLocation']
                                - else
                                  Unknown location
                                %br
                                %div{id: "task_#{task['Id']}_status_string"}= task_status_string(task['TaskStatus'])
                      - else
                        %p None
                    .modal-footer
                      %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
              %td
                %a{href: "#service_request_#{service_request['Id']}_workorders_modal", "data-target" => "#service_request_#{service_request['Id']}_workorders_modal", "data-toggle" => "modal", id: "#service_request_#{service_request['Id']}_workorders_link"}
                  %span.badge{style: 'background-color: #5BC0DE;'}= workorders.count
              .modal.fade{id: "service_request_#{service_request['Id']}_workorders_modal", "aria-labelledby" => "myModalLabel", :role => "dialog"}
                .modal-dialog.modal-sm{:role => "document"}
                  .modal-content
                    .modal-header
                      %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                        %span{"aria-hidden" => "true"} ×
                      %strong= "Service Request #{service_request['TripNumber']} Workorders"
                    .modal-body
                      - unless workorders.blank?
                        - workorders.sort_by {|task| task['Sequence']}.each do |workorder|
                          %li.list-group-item
                            = workorder['WorkOrderNumber']
                            = workorder['Customer']
                            %small
                              .text-muted 
                                %div= workorder['TaskType']
                      - else
                        %p None
                    .modal-footer
                      %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
              %td
                = link_to 'Show', '#', class: 'btn btn-default btn-xs'
                = link_to 'Edit', '#', class: 'btn btn-primary btn-xs'
                = link_to 'Remove', '#', class: 'btn btn-danger btn-xs'
  - else
    %p.lead None

    -#
      #accordion.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
        - @service_requests.each_with_index do |service_request, index|
          .panel.panel-default
            .panel-heading{id: "service_request_#{index}", :role => "tab"}
              %h4.panel-title
                %a{"aria-controls" => "collapseOne", "aria-expanded" => "true", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#collapse_#{index}", :role => "button"}
                  = "#{service_request['TripNumber']}"
                  =# Trip.service_request_tasks(service_request).first['Customer']
                  - driver = @drivers.find {|driver| driver['Id'] == service_request['DriverId']}
                  - unless driver.blank?
                    = "#{driver['FirstName']} #{driver['LastName']}"
                  %small
                    .text-muted
                      %br
                      = "#{service_request['BeginDate'].to_datetime.strftime('%m/%d/%y %l:%M:%S%P')}"
                      - unless service_request['EndDate'].blank? or service_request['EndDate'].is_a? Hash
                        = " - "
                        = "#{service_request['EndDate'].to_datetime.strftime('%m/%d/%y %l:%M:%S%P')}"
                      %br
                      - Trip.service_request_workorders(service_request).each do |workorder|
                        = workorder
                        =# @task_functions.find {|task_function| task_function['Id'] == workorder['TaskTypeFunctionId']}['Name']
            .panel-collapse.collapse{id: "collapse_#{index}", "aria-labelledby" => "service_request_#{index}", :role => "tabpanel"}
              %ul.list-group
                - Trip.service_request_tasks(service_request).each do |task|
                  %a{href: "#task_#{task['Id']}_modal", "data-target" => "#task_#{task['Id']}_modal", "data-toggle" => "modal", class: "list-group-item #{task_status_color(task['TaskStatus'])}", id: "task_#{task['Id']}_link"}
                    = task['Sequence']
                    = task_type_string(task['TaskType'])
                    %small
                      .text-muted 
                        - unless task['ToLocation'].blank?
                          = task['ToLocation']
                        - else
                          7100 30th Ave N
                        %br
                        %div{id: "task_#{task['Id']}_status_string"}= task_status_string(task['TaskStatus'])
-#
  - @service_requests.each do |sr|
    .well
      = sr

=# render partial: "shared/new_service_request_footer_navbar", locals: {title: "Service Request"}