= render partial: "shared/navbars/show_location_navbar", locals: {title: ""}
@title="Location #{@location_id}"

.jumbotron{style: 'background-color: #FFFFFF;'}
  .container  
    %div.row
      .col-xs-12.col-sm-12.col-md-6.col-md-offset-3
        %p= @location_address
        - unless @containers.blank?
          %div.containers_map{id: "location_#{@location_id}_containers_map", "container-coordinates-hashes-array" => @containers.map{ |c| Container.latitude_and_longitude(c)}.compact.to_json.html_safe}
          %br
          - @containers.each do |container|
            =# container
            %div.panel.panel-primary
              .panel-body
                = link_to "<i class='fa fa-cube'/></i> #{container['UserDispatchContainerNumber']}".html_safe, container_path(container['Id'], work_order_number: @work_order_number), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> #{container['UserDispatchContainerNumber']}"}, class: 'location_button'
              -#
                .panel-footer
                  - unless (container['Latitude'].blank? or container['Latitude'] == '0') and (container['Longitude'].blank? or container['Longitude'] == '0')
                    %a{href: "http://www.google.com/maps/place/#{container['Latitude']},#{container['Longitude']}", target: '_blank'}
                      = "#{container['Latitude']}, #{container['Longitude']}"
        - else
          %p No containers

=# render partial: "shared/pack_footer_navbar", locals: {title: "Pack List"}

:javascript
  var map;
  function initMap() {
    // Get all maps with ".containers_map"
    var maps = document.getElementsByClassName("containers_map");

    var ids, gps, mapId = '';

    // Loop: Explore all elements with "containers_map" and create a new Google Map object for each
    for(var i=0; i<maps.length; i++) {

      // Get ID of single div
      mapId = document.getElementById(maps[i].id);
      var containers = eval(mapId.getAttribute('container-coordinates-hashes-array'));
      //console.log("containers", containers);
      //console.log("length", containers.length);

      if(containers.length > 0){
        // Create new Google Map object for single canvas 
        mapId.style.width = "100%";
        mapId.style.height = "350px";
        map = new google.maps.Map(mapId, {
          zoom: 14,
          center: new google.maps.LatLng(parseFloat(containers[0].lat), parseFloat(containers[0].lng)),
          mapTypeId: 'roadmap',
          mapTypeControl: true,
          zoomControlOptions: {
              position: google.maps.ControlPosition.RIGHT_TOP
          }
        });
        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow();
        var marker, j;
        for (j = 0; j < containers.length; j++) {
          var container = containers[j];
          var latlng = new google.maps.LatLng(container.lat, container.lng);
          bounds.extend(latlng);

          // Create new Google Marker object for new map
          marker = new google.maps.Marker({
            // Use our LatLng array bellow
            position: latlng,
            map: map,
            title: container.number
          });
          // Automatically center the map fitting all markers on the screen
          map.fitBounds(bounds);

          google.maps.event.addListener(marker, 'click', (function (marker, j) {
            return function () {
              infowindow.setContent(marker.title);
              infowindow.open(map, marker);
            }
          })(marker, j));
        }
      }
    }
  }

%script{:src => "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_API_KEY']}&callback=initMap"}