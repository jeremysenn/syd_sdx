= render partial: "shared/navbars/show_trip_navbar", locals: {title: "Trip #{@trip['TripNumber']}"}
-@title= "Trip #{@trip['TripNumber']}"

-#
  .container
    %br
    %br
    .well.col-sm-6.col-md-4.col-md-offset-4
      %p.lead
        %strong Trip
        = "#{@trip['TripNumber']}"
      %p.lead
        %strong Locations
        - unless @locations.blank?
          - path_values = ""
          - @locations.each do |location|
            - path_values = path_values + "#{location['Latitude']},#{location['Longitude']};"
            -#
              %p
                = location['EntryDate']
                %br
                = location['Latitude']
                = location['Longitude']
          - path = path_values.split(';').join('|')
          =# path
        - else
          None

- unless @locations.blank?
  - path_values = ""
  - @locations.each do |location|
    - path_values = path_values + "#{location['Latitude']},#{location['Longitude']};"
    -#
      %p
        = location['EntryDate']
        %br
        = location['Latitude']
        = location['Longitude']
  - path = path_values.split(';').join('|')

.container
  %br
  %br
  %br
  %br
  #map
  #bar
    %p.auto
      %input#autoc{:type => "text"}/
    %p
      %a#clear{:href => "#"} Click here
      to clear map.


-# https://roads.googleapis.com/v1/snapToRoads?path=-35.27801,149.12958|-35.28032,149.12907|-35.28099,149.12929|-35.28144,149.12984|-35.28194,149.13003|-35.28282,149.12956|-35.28302,149.12881|-35.28473,149.12836&interpolate=true&key=YOUR_API_KEY

-# %script{:src => "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_API_KEY']}&callback=initialize"}
%script{:src => "https://maps.googleapis.com/maps/api/js?libraries=drawing,places&key=#{ENV['GOOGLE_MAPS_API_KEY']}"}
:javascript
  var apiKey = "#{ENV['GOOGLE_MAPS_API_KEY']}";

  var map;
  var drawingManager;
  var placeIdArray = [];
  var polylines = [];
  var snappedCoordinates = [];

  function initialize() {
    var mapOptions = {
      zoom: 17,
      center: {lat: -33.8667, lng: 151.1955,}
    };
    map = new google.maps.Map(document.getElementById('map'), mapOptions);

    // Adds a Places search box. Searching for a place will center the map on that
    // location.
    map.controls[google.maps.ControlPosition.RIGHT_TOP].push(
        document.getElementById('bar'));
    var autocomplete = new google.maps.places.Autocomplete(
        document.getElementById('autoc'));
    autocomplete.bindTo('bounds', map);
    autocomplete.addListener('place_changed', function() {
      var place = autocomplete.getPlace();
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);
      }
    });

    // Enables the polyline drawing control. Click on the map to start drawing a
    // polyline. Each click will add a new vertice. Double-click to stop drawing.
    drawingManager = new google.maps.drawing.DrawingManager({
      drawingMode: google.maps.drawing.OverlayType.POLYLINE,
      drawingControl: true,
      drawingControlOptions: {
        position: google.maps.ControlPosition.TOP_CENTER,
        drawingModes: [
          google.maps.drawing.OverlayType.POLYLINE
        ]
      },
      polylineOptions: {
        strokeColor: '#696969',
        strokeWeight: 2,
        strokeOpacity: 0.3,
      }
    });
    drawingManager.setMap(map);

    // Snap-to-road when the polyline is completed.
    drawingManager.addListener('polylinecomplete', function(poly) {
      var path = poly.getPath();
      polylines.push(poly);
      placeIdArray = [];
      runSnapToRoad(path);
    });


    // Clear button. Click to remove all polylines.
    document.getElementById('clear').addEventListener('click', function(event) {
      event.preventDefault();
      for (var i = 0; i < polylines.length; ++i) {
        polylines[i].setMap(null);
      }
      polylines = [];
      return false;
    });
  }

  // Snap a user-created polyline to roads and draw the snapped path
  function runSnapToRoad(path) {
    var pathValues = [];
    for (var i = 0; i < path.getLength(); i++) {
      pathValues.push(path.getAt(i).toUrlValue());
    }

    $.get('https://roads.googleapis.com/v1/snapToRoads', {
      interpolate: true,
      key: apiKey,
      path: pathValues.join('|')
    }, function(data) {
      processSnapToRoadResponse(data);
      drawSnappedPolyline();
    });
  }

  // Store snapped polyline returned by the snap-to-road service.
  function processSnapToRoadResponse(data) {
    snappedCoordinates = [];
    placeIdArray = [];
    for (var i = 0; i < data.snappedPoints.length; i++) {
      var latlng = new google.maps.LatLng(
          data.snappedPoints[i].location.latitude,
          data.snappedPoints[i].location.longitude);
      snappedCoordinates.push(latlng);
      placeIdArray.push(data.snappedPoints[i].placeId);
    }
  }

  // Draws the snapped polyline (after processing snap-to-road response).
  function drawSnappedPolyline() {
    var snappedPolyline = new google.maps.Polyline({
      path: snappedCoordinates,
      strokeColor: '#add8e6',
      strokeWeight: 4,
      strokeOpacity: 0.9,
    });

    snappedPolyline.setMap(map);
    polylines.push(snappedPolyline);
  }

